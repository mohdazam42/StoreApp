kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/mohazam1/Desktop/MyProjects/StoreApp/feature/productlist/presentation/src/main/java/com/feature/productlist/presentation/screen/ProductListScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:ProductListScreenRoute visibility:public modality:FINAL <> () returnType:kotlin.Unit
  annotations:
    Composable
  BLOCK_BODY
    VAR name:viewModel type:com.feature.productlist.presentation.screen.ProductListViewModel [val]
      TYPE_OP type=com.feature.productlist.presentation.screen.ProductListViewModel origin=IMPLICIT_CAST typeOperand=com.feature.productlist.presentation.screen.ProductListViewModel
        CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
          <VM>: com.feature.productlist.presentation.screen.ProductListViewModel
          viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          factory: COMPOSITE type=androidx.lifecycle.ViewModelProvider.Factory? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelProvider.Factory? value=null
          extras: COMPOSITE type=androidx.lifecycle.viewmodel.CreationExtras? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.viewmodel.CreationExtras? value=null
          $mask0: CONST Int type=kotlin.Int value=15
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:productState$delegate type:androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState>
        CALL 'public final fun collectAsStateWithLifecycle$default <T> (lifecycleOwner: androidx.lifecycle.LifecycleOwner?, minActiveState: androidx.lifecycle.Lifecycle.State?, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.lifecycle.compose.FlowExtKt.collectAsStateWithLifecycle$default> declared in androidx.lifecycle.compose.FlowExtKt' type=androidx.compose.runtime.State<T of androidx.lifecycle.compose.FlowExtKt.collectAsStateWithLifecycle$default> origin=DEFAULT_DISPATCH_CALL
          <T>: com.feature.productlist.presentation.screen.ProductListState
          $receiver: CALL 'public final fun <get-state> (): kotlinx.coroutines.flow.StateFlow<com.feature.productlist.presentation.screen.ProductListState> [fake_override] declared in com.feature.productlist.presentation.screen.ProductListViewModel' type=kotlinx.coroutines.flow.StateFlow<com.feature.productlist.presentation.screen.ProductListState> origin=GET_PROPERTY
            $this: GET_VAR 'val viewModel: com.feature.productlist.presentation.screen.ProductListViewModel [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=com.feature.productlist.presentation.screen.ProductListViewModel origin=null
          lifecycleOwner: COMPOSITE type=androidx.lifecycle.LifecycleOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.LifecycleOwner? value=null
          minActiveState: COMPOSITE type=androidx.lifecycle.Lifecycle.State? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.Lifecycle.State? value=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=7
          $handler: CONST Null type=kotlin.Any? value=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun <get-isLoading> (): kotlin.Boolean declared in com.feature.productlist.presentation.screen.ProductListState' type=kotlin.Boolean origin=GET_PROPERTY
          $this: CALL 'private final fun ProductListScreenRoute$lambda$0 ($productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState>): com.feature.productlist.presentation.screen.ProductListState declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=com.feature.productlist.presentation.screen.ProductListState origin=GET_LOCAL_PROPERTY
            $productState$delegate: GET_VAR 'val productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun CircularProgressIndicator-piYsEVY$default (modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, strokeWidth: androidx.compose.ui.unit.Dp, trackColor: androidx.compose.ui.graphics.Color, strokeCap: androidx.compose.ui.graphics.StrokeCap, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.ProgressIndicatorKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
            modifier: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static]' type=androidx.compose.ui.Modifier.Companion origin=null
              fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              $mask0: CONST Int type=kotlin.Int value=1
              $handler: CONST Null type=kotlin.Any? value=null
            color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            strokeWidth: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
                <T>: kotlin.Float
                <R>: androidx.compose.ui.unit.Dp
                v: CONST Float type=kotlin.Float value=0.0
            trackColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            strokeCap: COMPOSITE type=androidx.compose.ui.graphics.StrokeCap origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.StrokeCap origin=null
                <T>: kotlin.Int
                <R>: androidx.compose.ui.graphics.StrokeCap
                v: CONST Int type=kotlin.Int value=0
            $mask0: CONST Int type=kotlin.Int value=30
            $handler: CONST Null type=kotlin.Any? value=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          COMPOSITE type=kotlin.Unit origin=null
            BLOCK type=kotlin.Unit? origin=FOLDED_SAFE_CALL
              WHEN type=kotlin.Unit? origin=FOLDED_SAFE_CALL
                BRANCH
                  if: COMPOSITE type=kotlin.Boolean origin=null
                    VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? [val]
                      CALL 'public final fun <get-error> (): kotlin.String? declared in com.feature.productlist.presentation.screen.ProductListState' type=kotlin.String? origin=GET_PROPERTY
                        $this: CALL 'private final fun ProductListScreenRoute$lambda$0 ($productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState>): com.feature.productlist.presentation.screen.ProductListState declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=com.feature.productlist.presentation.screen.ProductListState origin=GET_LOCAL_PROPERTY
                          $productState$delegate: GET_VAR 'val productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> origin=null
                    CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                      $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                        arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=kotlin.String? origin=null
                        arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.StandardKt.let, R of kotlin.StandardKt.let>): R of kotlin.StandardKt.let [inline] declared in kotlin.StandardKt' type=kotlin.Unit origin=null
                    <T>: kotlin.String
                    <R>: kotlin.Unit
                    $receiver: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=kotlin.String? origin=null
                    block: BLOCK type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
                      COMPOSITE type=kotlin.Unit origin=null
                      FUNCTION_REFERENCE 'private final fun ProductListScreenRoute$lambda$1 (errorMessage: kotlin.String): kotlin.Unit declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CONST Null type=kotlin.Nothing? value=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isNotEmpty <T> (): kotlin.Boolean [inline] declared in kotlin.collections.CollectionsKt' type=kotlin.Boolean origin=null
                <T>: com.feature.productlist.domain.model.Product
                $receiver: CALL 'public final fun <get-productList> (): kotlin.collections.List<com.feature.productlist.domain.model.Product> declared in com.feature.productlist.presentation.screen.ProductListState' type=kotlin.collections.List<com.feature.productlist.domain.model.Product> origin=GET_PROPERTY
                  $this: CALL 'private final fun ProductListScreenRoute$lambda$0 ($productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState>): com.feature.productlist.presentation.screen.ProductListState declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=com.feature.productlist.presentation.screen.ProductListState origin=GET_LOCAL_PROPERTY
                    $productState$delegate: GET_VAR 'val productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> origin=null
              then: BLOCK type=kotlin.Unit origin=null
                CALL 'public final fun ProductListScreen (products: kotlin.collections.List<com.feature.productlist.domain.model.Product>): kotlin.Unit declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=kotlin.Unit origin=null
                  products: CALL 'public final fun <get-productList> (): kotlin.collections.List<com.feature.productlist.domain.model.Product> declared in com.feature.productlist.presentation.screen.ProductListState' type=kotlin.collections.List<com.feature.productlist.domain.model.Product> origin=GET_PROPERTY
                    $this: CALL 'private final fun ProductListScreenRoute$lambda$0 ($productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState>): com.feature.productlist.presentation.screen.ProductListState declared in com.feature.productlist.presentation.screen.ProductListScreenKt' type=com.feature.productlist.presentation.screen.ProductListState origin=GET_LOCAL_PROPERTY
                      $productState$delegate: GET_VAR 'val productState$delegate: androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> [val] declared in com.feature.productlist.presentation.screen.ProductListScreenKt.ProductListScreenRoute' type=androidx.compose.runtime.State<com.feature.productlist.presentation.screen.ProductListState> origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1121)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/lifecycle/viewmodel/compose/ViewModelKt__ViewModelKt;.viewModel$default(Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;Landroidx/lifecycle/ViewModelProvider$Factory;Landroidx/lifecycle/viewmodel/CreationExtras;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 71 more


