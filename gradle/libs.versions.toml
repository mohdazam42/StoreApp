[versions]
compileSdk = "35"
minSdk = "24"
targetSdk = "35"
versionCode = "1"
versionName = "1.0"

# Android Gradle Plugin version
agp = "8.8.1"

# Kotlin Symbol Processing (KSP) for annotation processing
ksp = "2.1.0-1.0.29"

# Retrofit Gson converter for JSON serialization/deserialization
converterGson = "2.10.0"

# Hilt Navigation for Jetpack Compose
hiltNavigationCompose = "1.2.0"

# Kotlin language version
kotlin = "2.1.0"

# Kotlinx Serialization JSON support
kotlinx-serialization-json = "1.8.0"

# AndroidX Core KTX (Kotlin Extensions)
coreKtx = "1.15.0"

# JUnit 4 for unit testing
junit = "4.13.2"

# JUnit AndroidX for instrumentation testing
junitVersion = "1.2.1"

# Espresso for UI testing
espressoCore = "3.6.1"

# Lifecycle runtime KTX for ViewModel and LiveData
lifecycleRuntimeKtx = "2.8.7"

# Jetpack Compose Activity integration
activityCompose = "1.10.0"

# Compose BOM (Bill of Materials) for version alignment
composeBom = "2025.02.00"

# AndroidX AppCompat for backward compatibility
appcompat = "1.7.0"

# OkHttp Logging Interceptor for debugging network requests
loggingInterceptor = "4.12.0"

# Google Material Components for UI
material = "1.12.0"

# Jetpack Compose Navigation
navigationCompose = "2.8.7"

# OkHttp core library
okhttp = "4.12.0"

# Retrofit for networking
retrofit = "2.11.0"

# Dagger Hilt for dependency injection
hiltAndroid = "2.51.1"

# Jetpack Compose Foundation components
foundationAndroid = "1.7.8"

# Material3 components for Jetpack Compose
material3Android = "1.3.1"

# UI Tooling Preview for Compose
uiToolingPreviewAndroid = "1.7.8"

# Coil for image loading
coil = "2.6.0"

# Testing dependencies
turbineVer = "1.2.0"
mockkVersion = "1.13.16"
coreTesting = "2.2.0"
kotlinxCoroutinesTest = "1.10.1"
strikt = "0.34.0"
mockwebserver = "4.12.0"
uiTooling = "1.7.8"

[libraries]
# Core AndroidX library with Kotlin extensions
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# Lifecycle ViewModel integration with Compose
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }

# Jetpack Compose Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

# Navigation testing support
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigationCompose" }

# AndroidX JUnit for instrumentation testing
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }

# Espresso for UI testing
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

# Lifecycle runtime KTX
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }

# Jetpack Compose Activity
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

# Compose BOM for version alignment
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }

# Google Material Components
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Jetpack Compose UI dependencies
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
androidx-ui-tooling-preview-android = { group = "androidx.compose.ui", name = "ui-tooling-preview-android", version.ref = "uiToolingPreviewAndroid" }

# AppCompat for backward compatibility
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

# Networking
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

# Hilt for dependency injection
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroid" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# Kotlin Serialization for JSON
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# Coil for image loading
coil-kt = { group = "io.coil-kt", name = "coil", version.ref = "coil" }
coil-kt-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

# Mocking libraries
junit = { group = "junit", name = "junit", version.ref = "junit" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockkVersion" }
testing-core = { group = "androidx.arch.core", name = "core-testing", version.ref = "coreTesting" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbineVer" }
strikt = { group = "io.strikt", name = "strikt-core", version.ref = "strikt" }
okhttp-mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockwebserver" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }

[bundles]
# Jetpack Compose essentials
compose = ["androidx-activity-compose", "androidx-ui", "androidx-ui-graphics", "androidx-ui-tooling-preview",
    "androidx-foundation-android", "androidx-material3-android", "androidx-ui-tooling-preview-android",
    "androidx-hilt-navigation-compose", "androidx-navigation-compose", "androidx-lifecycle-viewmodel-compose"]

coil = ["coil-kt", "coil-kt-compose"]

# Networking stack
networking = ["retrofit", "converter-gson", "okhttp", "logging-interceptor"]

# UI Testing
ui-testing = ["androidx-junit", "androidx-espresso-core", "androidx-ui-test-manifest", "androidx-ui-test-junit4"]

# Unit Testing
unit-testing = ["junit", "androidx-junit", "mockk-android", "testing-core", "turbine", "strikt", "kotlinx-coroutines-test"]

# Common Library Dependencies
common-library-dependencies = ["androidx-core-ktx", "androidx-appcompat", "material"]

[plugins]
# Plugin for building Android applications
android-application = { id = "com.android.application", version.ref = "agp" }

# Plugin for enabling Kotlin support in Android projects
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

# Plugin for Jetpack Compose support in Kotlin
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Plugin for building Android libraries instead of applications
android-library = { id = "com.android.library", version.ref = "agp" }

# Plugin for enabling Kotlin Serialization for JSON and other formats
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Plugin for Kotlin Symbol Processing (KSP) to handle annotation processing
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Plugin for Hilt dependency injection in Android applications
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" }